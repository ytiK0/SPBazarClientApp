import React, {useState} from 'react';
import styles from './authbutton.css';
import {useTypedSelector} from "../../hooks/useTypedSelector";
import {UserMenu} from "../UserMenu";

export function AuthButton() {
	const {user, isAuth} = useTypedSelector(state => state.user);
	const [isMenuActive, setIsMenuActive] = useState<boolean>(false);

	if (isAuth && user != null) {
		return (
			<div onClick={() => setIsMenuActive(!isMenuActive)}
			     className={styles.userContainer}>
				<span className={styles.userNick}>{user.userName}</span>
				<img src={user.avatarUrl} alt="" width={80} height={80}/>
				<UserMenu isActive={isMenuActive} />
			</div>
		)
	}
	return (
		<a href={process.env.OAUTH2_URL} className={styles.headerLogin}>
			<span className={styles.loginString}>Войти</span>
			<svg style={{display: "block"}} xmlns="http://www.w3.org/2000/svg" width="56" height="56"
			     viewBox="0 0 56 56" fill="none">
				<path
					d="M23.7891 0.124045C23.4938 0.178793 22.8375 0.419685 22.3344 0.649627C21.1531 1.20806 19.9063 2.41252 19.3813 3.49653C18.7797 4.73384 18.7031 5.24847 18.7031 7.99683C18.7031 10.3838 18.7141 10.4824 18.9547 10.8437C19.3047 11.3803 20.1031 11.7525 20.6828 11.654C21.2625 11.5555 21.9406 10.9532 22.0938 10.4167C22.1484 10.1868 22.2031 9.04799 22.2031 7.87638C22.2031 5.86165 22.225 5.70835 22.4656 5.18277C22.6078 4.88713 22.925 4.4601 23.1875 4.23016C24.0734 3.47463 23.7891 3.49653 32.3094 3.50748L39.9766 3.51843L37.6031 4.31775C34.5406 5.34702 33.8625 5.81785 33.0969 7.42745L32.7578 8.15012L32.7031 45.5431H28.6781C24.1719 45.5431 24.0187 45.5212 23.1875 44.8095C22.925 44.5795 22.6078 44.1525 22.4656 43.8569C22.225 43.3313 22.2031 43.178 22.2031 41.1633C22.2031 39.9916 22.1484 38.8529 22.0938 38.6229C21.9406 38.0864 21.2625 37.4842 20.6828 37.3856C20.1031 37.2871 19.3047 37.6594 18.9547 38.1959C18.7141 38.5572 18.7031 38.6558 18.7031 41.0428C18.7031 43.7912 18.7797 44.3058 19.3813 45.5431C19.9063 46.6271 21.1531 47.8316 22.3234 48.3791C22.8266 48.6199 23.5375 48.8608 23.8875 48.9265C24.2812 49.0032 26.1625 49.047 28.6234 49.047H32.7031V50.6128C32.7031 51.6858 32.7578 52.3538 32.8672 52.7261C33.1187 53.5911 33.8078 54.5656 34.5625 55.1131C35.4703 55.781 36.1484 56 37.3516 56H38.3359L45.6641 53.5473C49.7 52.2005 53.2328 50.9741 53.5281 50.8318C54.1625 50.5142 54.9719 49.7259 55.3766 49.047C56.0328 47.9082 56 49.2879 56 25.6695C56 2.24827 56.0328 3.58413 55.3984 2.41252C55.0375 1.75554 54.1516 0.879569 53.5062 0.55108C52.3797 -0.0292502 52.8609 -0.00735091 38.0625 0.00359872C29.8922 0.0145483 24.1172 0.0583469 23.7891 0.124045ZM52.1609 3.86882L52.4453 4.15351L52.4781 25.5381C52.5109 45.346 52.5 46.9337 52.325 47.2622C52.2266 47.4593 51.9859 47.6783 51.8 47.7659C51.6141 47.8535 48.3109 48.9703 44.4609 50.2514C36.8703 52.7808 37.1219 52.7261 36.5203 52.1129L36.2031 51.8063V8.8728L36.4547 8.58811C36.6516 8.35816 38.0078 7.87638 43.8594 5.90545C51.625 3.29944 51.5922 3.31039 52.1609 3.86882Z"
					fill="#FFB833"/>
				<path
					d="M14.5469 14.1286C13.6391 14.49 13.1687 15.6835 13.6062 16.5047C13.6937 16.6689 15.1047 18.1252 16.7234 19.7567L19.6875 22.7131L10.4016 22.7679C1.23594 22.8226 1.10469 22.8226 0.809375 23.0526C0.229688 23.4796 0.0546875 23.83 0.0546875 24.5198C0.0546875 25.2096 0.229688 25.56 0.809375 25.9871C1.10469 26.217 1.23594 26.217 10.4016 26.2718L19.6875 26.3265L16.7234 29.2829C15.1047 30.9034 13.6937 32.3707 13.6062 32.5349C13.5187 32.6992 13.4531 33.0496 13.4531 33.3124C13.4531 34.5497 14.8313 35.3928 15.925 34.8344C16.1766 34.703 18.2656 32.6882 20.9125 30.0275C24.8281 26.0966 25.4844 25.3848 25.6047 24.9797C25.8891 24.0052 25.9328 24.0599 20.9125 19.0121C18.3969 16.4937 16.1656 14.3367 15.9469 14.2162C15.5094 13.9863 14.9844 13.9534 14.5469 14.1286Z"
					fill="#FFB833"/>
			</svg>
		</a>
	);
}
